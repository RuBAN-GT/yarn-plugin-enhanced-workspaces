/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-enhanced-workspaces",
factory: function (require) {
var plugin=(()=>{var Oe=Object.create,F=Object.defineProperty;var Fe=Object.getOwnPropertyDescriptor;var Je=Object.getOwnPropertyNames;var He=Object.getPrototypeOf,Ke=Object.prototype.hasOwnProperty;var _e=s=>F(s,"__esModule",{value:!0});var f=s=>{if(typeof require!="undefined")return require(s);throw new Error('Dynamic require of "'+s+'" is not supported')};var J=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),Ve=(s,e)=>{for(var r in e)F(s,r,{get:e[r],enumerable:!0})},qe=(s,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of Je(e))!Ke.call(s,n)&&n!=="default"&&F(s,n,{get:()=>e[n],enumerable:!(r=Fe(e,n))||r.enumerable});return s},u=s=>qe(_e(F(s!=null?Oe(He(s)):{},"default",s&&s.__esModule&&"default"in s?{get:()=>s.default,enumerable:!0}:{value:s,enumerable:!0})),s);var ee=J((V,Z)=>{(function(s,e){typeof V=="object"?Z.exports=e():typeof define=="function"&&define.amd?define(e):s.treeify=e()})(V,function(){function s(t,i){var a=i?"\u2514":"\u251C";return t?a+="\u2500 ":a+="\u2500\u2500\u2510",a}function e(t,i){var a=[];for(var l in t)!t.hasOwnProperty(l)||i&&typeof t[l]=="function"||a.push(l);return a}function r(t,i,a,l,o,c,p){var d="",k=0,h,w,v=l.slice(0);if(v.push([i,a])&&l.length>0&&(l.forEach(function(y,Ue){Ue>0&&(d+=(y[1]?" ":"\u2502")+"  "),!w&&y[0]===i&&(w=!0)}),d+=s(t,a)+t,o&&(typeof i!="object"||i instanceof Date)&&(d+=": "+i),w&&(d+=" (circular ref.)"),p(d)),!w&&typeof i=="object"){var A=e(i,c);A.forEach(function(y){h=++k===A.length,r(y,i[y],h,v,o,c,p)})}}var n={};return n.asLines=function(t,i,a,l){var o=typeof a!="function"?a:!1;r(".",t,!1,[],i,o,l||a)},n.asTree=function(t,i,a){var l="";return r(".",t,!1,[],i,a,function(o){l+=o+`
`}),l},n})});var ne=J((dr,oe)=>{oe.exports=function(){"use strict";function s(r,n){var t=n.length,i,a;return t>=2?(i=n.slice(0,t/2),a=n.slice(t/2,t),e(r,s(r,i),s(r,a))):n.slice()}function e(r,n,t){for(var i=[],a=n.length,l=t.length;a>0&&l>0;)r(n[0],t[0])<=0?(i.push(n.shift()),a--):(i.push(t.shift()),l--);return a>0?i.push.apply(i,n):i.push.apply(i,t),i}return s}()});var ie=J((lr,se)=>{se.exports=function(){"use strict";function s(e,r,n){var t,i;for(t=0,i=r.length;t<i&&!(e(r[t],n)>0);t++);return t}return s}()});var de=J((ur,pe)=>{var ae,ce;ae=ne();ce=ie();pe.exports=function(){"use strict";var s;s={};function e(o){return function(){return o}}function r(o){o=o||{},this.config=o,this.config.childrenPropertyName=o.childrenPropertyName||"children",this.config.modelComparatorFn=o.modelComparatorFn}function n(o,c){return c.parent=o,o.children.push(c),c}function t(o,c){this.config=o,this.model=c,this.children=[]}r.prototype.parse=function(o){var c,p,d;if(!(o instanceof Object))throw new TypeError("Model must be of type object.");if(d=new t(this.config,o),o[this.config.childrenPropertyName]instanceof Array)for(this.config.modelComparatorFn&&(o[this.config.childrenPropertyName]=ae(this.config.modelComparatorFn,o[this.config.childrenPropertyName])),c=0,p=o[this.config.childrenPropertyName].length;c<p;c++)n(d,this.parse(o[this.config.childrenPropertyName][c]));return d};function i(o){return typeof o.config.modelComparatorFn=="function"}t.prototype.isRoot=function(){return this.parent===void 0},t.prototype.hasChildren=function(){return this.children.length>0};function a(o,c,p){var d;if(!(c instanceof t))throw new TypeError("Child must be of type Node.");if(c.parent=o,o.model[o.config.childrenPropertyName]instanceof Array||(o.model[o.config.childrenPropertyName]=[]),i(o))d=ce(o.config.modelComparatorFn,o.model[o.config.childrenPropertyName],c.model),o.model[o.config.childrenPropertyName].splice(d,0,c.model),o.children.splice(d,0,c);else if(p===void 0)o.model[o.config.childrenPropertyName].push(c.model),o.children.push(c);else{if(p<0||p>o.children.length)throw new Error("Invalid index.");o.model[o.config.childrenPropertyName].splice(p,0,c.model),o.children.splice(p,0,c)}return c}t.prototype.addChild=function(o){return a(this,o)},t.prototype.addChildAtIndex=function(o,c){if(i(this))throw new Error("Cannot add child at index when using a comparator function.");return a(this,o,c)},t.prototype.setIndex=function(o){if(i(this))throw new Error("Cannot set node index when using a comparator function.");if(this.isRoot()){if(o===0)return this;throw new Error("Invalid index.")}if(o<0||o>=this.parent.children.length)throw new Error("Invalid index.");var c=this.parent.children.indexOf(this);return this.parent.children.splice(o,0,this.parent.children.splice(c,1)[0]),this.parent.model[this.parent.config.childrenPropertyName].splice(o,0,this.parent.model[this.parent.config.childrenPropertyName].splice(c,1)[0]),this},t.prototype.getPath=function(){var o=[];return function c(p){o.unshift(p),p.isRoot()||c(p.parent)}(this),o},t.prototype.getIndex=function(){return this.isRoot()?0:this.parent.children.indexOf(this)};function l(){var o={};if(arguments.length===1?typeof arguments[0]=="function"?o.fn=arguments[0]:o.options=arguments[0]:arguments.length===2?typeof arguments[0]=="function"?(o.fn=arguments[0],o.ctx=arguments[1]):(o.options=arguments[0],o.fn=arguments[1]):(o.options=arguments[0],o.fn=arguments[1],o.ctx=arguments[2]),o.options=o.options||{},o.options.strategy||(o.options.strategy="pre"),!s[o.options.strategy])throw new Error("Unknown tree walk strategy. Valid strategies are 'pre' [default], 'post' and 'breadth'.");return o}return t.prototype.walk=function(){var o;o=l.apply(this,arguments),s[o.options.strategy].call(this,o.fn,o.ctx)},s.pre=function o(c,p){var d,k,h;for(h=c.call(p,this),d=0,k=this.children.length;d<k;d++){if(h===!1)return!1;h=o.call(this.children[d],c,p)}return h},s.post=function o(c,p){var d,k,h;for(d=0,k=this.children.length;d<k;d++)if(h=o.call(this.children[d],c,p),h===!1)return!1;return h=c.call(p,this),h},s.breadth=function(c,p){var d=[this];(function k(){var h,w,v;if(d.length!==0){for(v=d.shift(),h=0,w=v.children.length;h<w;h++)d.push(v.children[h]);c.call(p,v)!==!1&&k()}})()},t.prototype.all=function(){var o,c=[];return o=l.apply(this,arguments),o.fn=o.fn||e(!0),s[o.options.strategy].call(this,function(p){o.fn.call(o.ctx,p)&&c.push(p)},o.ctx),c},t.prototype.first=function(){var o,c;return o=l.apply(this,arguments),o.fn=o.fn||e(!0),s[o.options.strategy].call(this,function(p){if(o.fn.call(o.ctx,p))return c=p,!1},o.ctx),c},t.prototype.drop=function(){var o;return this.isRoot()||(o=this.parent.children.indexOf(this),this.parent.children.splice(o,1),this.parent.model[this.config.childrenPropertyName].splice(o,1),this.parent=void 0,delete this.parent),this},r}()});var Ze={};Ve(Ze,{default:()=>Xe});var R=u(f("@yarnpkg/core"));var g;(function(n){n.baseRef="base-ref",n.prevRef="prev-ref",n.none="none"})(g||(g={}));var ue=u(f("@yarnpkg/core")),E=u(f("clipanion")),fe=u(f("@yarnpkg/core")),he=u(ee()),ge=u(f("typanion"));var C;(function(r){r.json="json",r.tree="tree"})(C||(C={}));var q=class{constructor(){this.children=[]}get chain(){return this._chain}get depth(){return this._chain.size}addChildren(e){return this.children.push(e),this}hasChildren(e){return this.children.some(r=>r.id===e.id)}hasDeepChildren(e){return e.children.some(r=>r.id===e.id||r.hasDeepChildren(e))}generateChain(){var e;this._chain=new Set((e=this.parent)==null?void 0:e.chain),this._chain.add(this.id)}};var D=class extends q{constructor(e,r){super();this.parent=r,this.workspace=e,this.generateChain()}get id(){return this.workspace.anchoredLocator}get name(){return this.workspace.manifest.raw.name}};function $(s){let e=[];return s.children.forEach(r=>{e.push($(r))}),{name:s.name,children:e}}function re(s){var r;let e=((r=s.children)==null?void 0:r.length)>0?{}:null;return s.children.forEach(n=>{e[n.name]=re(n)}),e}function te(s){return{[s.name]:re(s)}}var S=class{async resolve(e){return await e.restoreInstallState(),this.buildWorkspacesTree(e)}buildWorkspacesTree(e){let r=this.getEssentialWorkspaces(e);if(r.length===0)throw new Error("Project doesn't have any essentail workspaces");let n=new D(e.topLevelWorkspace);return r.forEach(t=>{let i=new D(t,n);this.fillChildrenNodes(e,i),n.addChildren(i)}),n}getWorkspacePackage(e,r){let n=e.storedPackages.get(r.anchoredLocator.locatorHash);if(!n)throw new Error("Unknown workspace");return n}getEssentialWorkspaces(e){return e.workspaces.filter(r=>r.locator.name===e.topLevelWorkspace.locator.name?!1:this.getWorkspaceInternalDependencies(e,r).size===0)}getWorkspaceInternalDependencies(e,r){let n=this.getWorkspacePackage(e,r),t=new Set;return[...n.dependencies,...n.peerDependencies].forEach(([,i])=>{let a=e.tryWorkspaceByIdent(i);a&&t.add(a)}),t}getWorkspaceExternalDependencies(e,r){let n=e.workspaces.filter(t=>{let i=this.getWorkspacePackage(e,t);return i.dependencies.has(r.locator.identHash)||i.peerDependencies.has(r.locator.identHash)});return new Set(n)}fillChildrenNodes(e,r){this.getWorkspaceExternalDependencies(e,r.workspace).forEach(t=>{if(r.chain.has(t.anchoredLocator))return;let i=new D(t,r);r.addChildren(i),this.fillChildrenNodes(e,i)})}};var le=u(de()),z=class{constructor(e){this.root=e,this.tree=this.parseWorkspaceNode(e)}findAllParents(e){return this.tree.all(({model:r})=>e.chain.has(r.id)||r.hasChildren(e)).map(r=>r.model)}findNodesByIds(e){return this.tree.all(({model:r})=>e.has(r.id)).map(r=>r.model)}findNodesByWorkspaces(e){return this.tree.all(({model:r})=>e.includes(r.workspace)).map(r=>r.model)}parseWorkspaceNode(e){return new le.default().parse(e)}};var I=class extends E.Command{constructor(){super(...arguments);this.outputFormat=E.Option.String("-o,--output-format",C.tree,{description:"Output format, can be 'json', 'tree'",validator:(0,ge.isEnum)(C)});this.workspaceResolver=new S}async execute(){let e=await fe.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await ue.Project.find(e,this.context.cwd),n=await this.workspaceResolver.resolve(r);this.printTree(n)}printTree(e){switch(this.outputFormat){case C.json:{console.log(JSON.stringify($(e)));break}case C.tree:{console.log((0,he.asTree)(te(e),!1,!0));break}}}};I.paths=[["workspaces","graph"]],I.usage=E.Command.Usage({category:"Workspace-related commands",description:"Prints monitored workspaces graph"});var Se=u(f("@yarnpkg/core")),b=u(f("clipanion")),Ee=u(f("@yarnpkg/core")),P=u(f("typanion"));var Ce=u(f("clipanion"));var B=u(f("@yarnpkg/core"));async function $e(s){let e={cwd:s,strict:!1},{stdout:r}=await B.execUtils.execvp("git",["describe","--tags","--abbrev=0"],e),n=r.trim();if(!n)return"";let{stdout:t}=await B.execUtils.execvp("git",["rev-list","-n","1",n],e);return t.trim()}async function ze(s,e){let r=[];for(let n of e){let{code:t}=await B.execUtils.execvp("git",["merge-base",n,"HEAD"],{cwd:s,strict:!1});t===0&&r.push(n)}return r}async function Qe(s,e=[]){let r=await ze(s,e);if(r.length===0)return"";let{stdout:n}=await B.execUtils.execvp("git",["merge-base","HEAD",...r],{cwd:s,strict:!1});return n.trim()}var me=async s=>{let{projectCwd:e,baseRefs:r=[]}=s,n=await $e(e);return{commit:n||await Qe(e,r)}};var ke=u(f("@yarnpkg/core")),ye=async s=>{let{projectCwd:e}=s,r={cwd:e,strict:!1},{stdout:n}=await ke.execUtils.execvp("git",["rev-parse","HEAD^1"],r);return{commit:n.trim()}};function we(s){if(s===g.baseRef)return me;if(s===g.prevRef)return ye;throw new Error(`Unknown strategy ${s}`)}async function be(s,e){let{configuration:r}=s;return e||(e=r.get("changeDetectionStrategy")),(await we(e)({projectCwd:r.projectCwd,baseRefs:r.get("changesetBaseRefs")})).commit}var Q=u(f("@yarnpkg/core"));function ve(s,e){let r=Q.miscUtils.mapAndFilter(e,n=>{let t=s.tryWorkspaceByFilePath(n);return t===null?Q.miscUtils.mapAndFilter.skip:t});return new Set(r)}var G=u(f("@yarnpkg/core")),L=u(f("@yarnpkg/fslib")),xe=(s,e)=>e.split(/\r\n|\r|\n/).filter(r=>r.length>0).map(r=>L.ppath.resolve(s,L.npath.toPortablePath(r)));async function Pe(s,e){let r=s.configuration.projectCwd,n=s.configuration.get("changesetIgnorePatterns")||[],t={cwd:r,strict:!0},i=[];if(e){let{stdout:p}=await G.execUtils.execvp("git",["diff","--name-only",e],t);i=xe(r,p)}let{stdout:a}=await G.execUtils.execvp("git",["ls-files","--others","--exclude-standard"],t),l=xe(r,a),o=[...new Set([...i,...l].sort())],c=G.miscUtils.buildIgnorePattern(n);return c?o.filter(p=>!L.ppath.relative(s.cwd,p).match(c)):o}var H=u(f("@yarnpkg/fslib"));function Ne(s,e){if(!e||e.length===0)return!1;let{workspace:r}=s;return e.some(n=>{let t=H.ppath.join(r.cwd,n);return H.xfs.existsSync(t)})}var T=class{constructor(){this.workspaceResolver=new S}async findCandidates(e,r={}){let{topLevelWorkspace:n,configuration:t}=e,{withAncestor:i,withPrivate:a}=r,{extra:l=[],ignoredAncestorsMarkers:o=[]}=r,c=await this.findAffectedWorkspaces(e,r.changeDetectionStrategy);a=a===void 0?t.get("detectPrivates"):a;let p=[...c].filter(y=>y===n?!1:!y.manifest.private||a),d=l.concat(t.get("extraWorkspaces"));if(d.length>0&&e.workspaces.forEach(y=>{d.includes(y.manifest.raw.name)&&!p.includes(y)&&p.push(y)}),p.length===0)return new Map;let k=await this.workspaceResolver.resolve(e),h=new z(k),w=this.findAffectedNodes(h,p);if(i=i===void 0?t.get("preserveAncestors"):i,!i)return w;let v=t.get("ignoredAncestorsMarkers")||[],A=this.mixAncestorsNodes(h,w,o.concat(v));return A.delete(k.workspace.locator),A}async findAffectedWorkspaces(e,r){if(e.configuration.projectCwd){if(r===g.none)return new Set(e.workspaces)}else throw new Ce.UsageError("Invalid project configuration.");let n=await be(e,r),t=await Pe(e,n);return ve(e,t)}findAffectedNodes(e,r){let n=new Map;return e.findNodesByWorkspaces(r).forEach(t=>{let i=t.workspace.locator,a=n.get(i);(!a||a.depth<t.depth)&&n.set(i,t)}),n}mixAncestorsNodes(e,r,n=[]){let t=new Map;return r.forEach(i=>{e.findAllParents(i).forEach(a=>{(r.has(a.workspace.locator)||!Ne(a,n))&&t.set(a.workspace.locator,a)})}),t}};function Te(s,e){let r=Math.ceil(s.length/e),n=Array(r);for(let t=0;t<r;t++){let i=t*e;n[t]=s.slice(i,i+e)}return n}function W(s){let e=[];return s.forEach(r=>{e.push(r)}),e}function Me(s){let e=new Set;return s.forEach((r,n)=>{e.add(n)}),e}function Y(s){let e=new Map;return s.forEach((r,n)=>{let t=e.get(r)||[];t.push(n),e.set(r,t)}),e}var We=u(f("os")),K=()=>Math.max(1,(0,We.cpus)().length/2);function Re(s,e){let r=[...Me(s)],n=0,t;return r.forEach(i=>{let a=s.get(i);i.hasChildren(e)&&(!t||i.depth>t.depth||a>n)&&(n=a,t=i)}),e.chain.forEach(i=>{let a=r.find(l=>l.id===i);a&&(!t||a.depth>t.depth)&&(t=a)}),t?[s.get(t),t]:[0,void 0]}function Ae(s){return s.sort((e,r)=>{if(e.hasChildren(r))return-1;let n=e.depth===r.depth?"name":"depth";return e[n]>r[n]?1:-1})}var X=class{resolve(e){let r=new Map;return this.fillSourceFragment(r,Ae(e)),r}fillSourceFragment(e,[r,...n]){if(!r)return;if(!r.parent)return e.set(r,0),this.fillSourceFragment(e,n);let[t,i]=Re(e,r);i?e.set(r,t+1):e.set(r,0),n.length>0&&this.fillSourceFragment(e,n)}};var M=class{constructor(){this.rankResolver=new X}list(e){let r=[],n=this.rankResolver.resolve(e);return Y(n).forEach(t=>{r=r.concat(t)}),r}chunks(e){let{groupBy:r,input:n}=e,t=[],i=this.rankResolver.resolve(n);return Y(i).forEach(a=>{let l=Te(a,r);t=t.concat(l)}),{groupBy:r,data:t}}};function De(s){return{groupBy:s.groupBy,data:s.data.map(e=>e.map(r=>r.name))}}var j=class extends b.Command{constructor(){super(...arguments);this.groupBy=b.Option.String("-g,--group-by",K().toString(),{description:"Slice workspaces by this number, it should be positive number",validator:(0,P.applyCascade)((0,P.isNumber)(),[(0,P.isAtLeast)(1)])});this.changeDetectionStrategy=b.Option.String("-s,--change-detection-strategy",{description:"Change detection strategy",validator:(0,P.isEnum)(g)});this.withAncestors=b.Option.Boolean("-a,--ancestors",!1,{description:"Perform operation over ancestors"});this.ignoredAncestorsMarkers=b.Option.Array("--ignored-ancestors-markers",[],{description:"The same as ignoredAncestorsMarkers"});this.withPrivate=b.Option.Boolean("--private",!0,{description:"Include private workspaces"});this.extraList=b.Option.Array("--extra",[],{description:"Add specific workspaces without change detection"});this.cdManager=new T;this.groupManager=new M}async execute(){let e=await Ee.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await Se.Project.find(e,this.context.cwd),n=await this.cdManager.findCandidates(r,{changeDetectionStrategy:this.changeDetectionStrategy,withAncestor:this.withAncestors,ignoredAncestorsMarkers:this.ignoredAncestorsMarkers,withPrivate:this.withPrivate,extra:this.extraList}),t=this.groupManager.chunks({groupBy:+this.groupBy,input:W(n)});console.log(JSON.stringify(De(t)))}};j.paths=[["workspaces","changed","chunks"]],j.usage=b.Command.Usage({category:"Workspace-related commands",description:"Prints affected workspaces collected by chunks"});var Ie=u(f("@yarnpkg/core")),x=u(f("clipanion")),Be=u(f("@yarnpkg/core")),Ge=u(f("typanion"));var U=class extends x.Command{constructor(){super(...arguments);this.changeDetectionStrategy=x.Option.String("-s,--change-detection-strategy",{description:"Change detection strategy",validator:(0,Ge.isEnum)(g)});this.withAncestors=x.Option.Boolean("-a,--ancestors",!1,{description:"Perform operation over ancestors"});this.ignoredAncestorsMarkers=x.Option.Array("--ignored-ancestors-markers",[],{description:"The same as ignoredAncestorsMarkers"});this.withPrivate=x.Option.Boolean("--private",!0,{description:"Include private workspaces"});this.extraList=x.Option.Array("--extra",[],{description:"Add specific workspaces without change detection"});this.cdManager=new T;this.groupManager=new M}async execute(){let e=await Be.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await Ie.Project.find(e,this.context.cwd),n=await this.cdManager.findCandidates(r,{changeDetectionStrategy:this.changeDetectionStrategy,withAncestor:this.withAncestors,ignoredAncestorsMarkers:this.ignoredAncestorsMarkers,withPrivate:this.withPrivate,extra:this.extraList}),t=this.groupManager.list(W(n)).map(i=>i.name);console.log(JSON.stringify(t))}};U.paths=[["workspaces","changed","list"]],U.usage=x.Command.Usage({category:"Workspace-related commands",description:"Prints workspaces that should be utilized."});var Le=u(f("@yarnpkg/core")),m=u(f("clipanion")),je=u(f("@yarnpkg/core")),N=u(f("typanion"));var _="@yarnpkg/plugin-workspace-tools";var O=class extends m.Command{constructor(){super(...arguments);this.commandName=m.Option.String();this.args=m.Option.Proxy()||[];this.changeDetectionStrategy=m.Option.String("-s,--change-detection-strategy",{description:"Change detection strategy",validator:(0,N.isEnum)(g)});this.withAncestors=m.Option.Boolean("-a,--ancestors",!1,{description:"Perform operation over ancestors"});this.ignoredAncestorsMarkers=m.Option.Array("--ignored-ancestors-markers",[],{description:"The same as ignoredAncestorsMarkers"});this.withPrivate=m.Option.Boolean("--private",!0,{description:"Include private workspaces"});this.isParallel=m.Option.Boolean("-p,--parallel",!1,{description:"Run the commands in parallel"});this.groupBy=m.Option.String("-g,--group-by",K().toString(),{description:"Slice workspaces by this number, it should be positive number",validator:(0,N.applyCascade)((0,N.isNumber)(),[(0,N.isAtLeast)(1)])});this.excludeList=m.Option.Array("--exclude",[],{description:"Exclude specific workspaces"});this.includeList=m.Option.Array("--include",[],{description:"Include specific workspaces"});this.extraList=m.Option.Array("--extra",[],{description:"Add specific workspaces without change detection"});this.cdManager=new T;this.groupManager=new M}async execute(){let e=await je.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await Le.Project.find(e,this.context.cwd);this.validate(e);let n=await this.getGroups(r);if(n.data.length===0){console.dir("No affected workspaces.");return}await this.executeGroups(n)}async getGroups(e){let r=await this.cdManager.findCandidates(e,{changeDetectionStrategy:this.changeDetectionStrategy,withAncestor:this.withAncestors,ignoredAncestorsMarkers:this.ignoredAncestorsMarkers,withPrivate:this.withPrivate,extra:this.extraList}),n=W(r).filter(t=>!(this.excludeList.includes(t.name)||this.includeList.length>0&&!this.includeList.includes(t.name)));return this.groupManager.chunks({groupBy:+this.groupBy,input:n})}async executeGroups(e){let r=["workspaces","foreach","-i","--topological-dev"];this.isParallel&&r.push("--parallel");for await(let n of e.data){let t=n.map(a=>a.name),i=t.reduce((a,l)=>[...a,"--include",l],[]);console.dir(`Execute '${this.args.join(" ")}' command over ${t.join(", ")}`),await this.cli.run([...r,...i,this.commandName,...this.args])}}validate(e){if(!e.plugins.has(_))throw new m.UsageError(`You should install ${_} plugin to use this command.`)}};O.paths=[["workspaces","changed","foreach"]],O.usage=m.Command.Usage({category:"Workspace-related commands",description:`A wrapper over foreach with -it options helping to invoke operations for changed workspaces. Required to have installed ${_} plugin.`});var Ye={configuration:{changeDetectionStrategy:{description:"Which source the plugin should use in order to determine workspaces changes.",type:R.SettingsType.STRING,isNullable:!1,default:g.baseRef,values:[g.baseRef,g.prevRef]},detectPrivates:{description:"Gather private workspaces into changed list.",type:R.SettingsType.BOOLEAN,isNullable:!1,default:!0},ignoredAncestorsMarkers:{description:"If ancestor workspace contains these files/directories it will be excluded from execution list.",type:R.SettingsType.STRING,isNullable:!1,isArray:!0,default:[]},preserveAncestors:{description:"Preserve ancestors of changed workspaces.",type:R.SettingsType.BOOLEAN,isNullable:!1,default:!1},extraWorkspaces:{description:"List of additional workspaces outside change detection gathering.",type:R.SettingsType.STRING,isNullable:!1,isArray:!0,default:[]}},commands:[I,j,U,O]},Xe=Ye;return Ze;})();
return plugin;
}
};
